name: Create Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v0.2.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Get Version
        id: get_version
        run: |
          VERSION=$(python -c "import json; v=json.load(open('bl_info.json'))['version']; print(f'{v[0]}.{v[1]}.{v[2]}')")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "zip_name=Rainys-Bulk-Scene-Tools.v$VERSION.zip" >> $GITHUB_OUTPUT
      
      - name: Create ZIP
        run: |
          # Create a temporary directory structure
          mkdir -p addon_files/Rainys-Bulk-Scene-Tools
          # Create the subdirectories in the addon directory
          mkdir -p addon_files/Rainys-Bulk-Scene-Tools/updater
          mkdir -p addon_files/Rainys-Bulk-Scene-Tools/panels
          mkdir -p addon_files/Rainys-Bulk-Scene-Tools/ops
          # Copy main addon files
          cp __init__.py bl_info.json requirements.txt readme.md changelog.md addon_files/Rainys-Bulk-Scene-Tools/
          # Copy the panels module
          cp -r panels/* addon_files/Rainys-Bulk-Scene-Tools/panels/
          # Copy the ops module
          cp -r ops/* addon_files/Rainys-Bulk-Scene-Tools/ops/
          # Copy the updater module
          cp -r updater/* addon_files/Rainys-Bulk-Scene-Tools/updater/
          # Create the zip from the temporary directory
          cd addon_files
          zip -r "../${{ steps.get_version.outputs.zip_name }}" ./*
      
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.get_version.outputs.zip_name }}
          tag_name: ${{ inputs.release_tag }}
          draft: true 